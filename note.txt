
props :  data yang bisa kita kirim ke komponen React
dinamis: pake props untuk membuat componen yang dinamis,bikin komponen jadi lebih reusable

caranya:
1.didalam parameter func componen diberi parameter dengan kurung {} untuk mengirim props,dan atur tata letaknya didalam div
2.cara pakai = panggil nama func componen dan propsnya juga mau di isi apa 
cth :  <Input label= "Full Name " placeholder="Full Name" />

cara membuat component dinamis dan reusable:
1.buat func component seperti biasa
2.buat props didalam parameter func component
3.buat tata letak props didalam return func



1.struktur folder

src = tempat menyimpan file codingan
-pages = menyimpan halaman cth halaman login
-components = tempat menyimpan component kecil
-utils = menyimpan fungsi yang sering digunakan utk keperluan berulang
-assets = tempat menyimpan img,dummy,file json
-config = menyimpan configurasi seperti routing/configurasi API


2.buat router pake react router,simpan di folder config dan buat file index.js
cth : /login

3.Buat  pages Login didalamnya ada index.js
setiap file itu ada index.js,isinya import dan export func component


4.slicing halaman dengan sccs,dowload node-sass 

5.di folder pages(cth register) ada 2 file index.js dan file scss
index.js untuk merender component 
file scss untuk styling

6.kalo ada component yang digunakan berulang maka buat component terpisah di dalam folder component

7.Main Page/Home(membuat nested routes)
3 halaman utama di main app
-homepage = untuk semua postingan
-create blog
-detail blog
pake layout yang sama
-header
-footer

8.ke folder Homepage: ada 3 
-btn create post/blog
-component list blog
-pagination
 
 9.buat tampilan untuk setiap page sesuai yang diinginkan

 10.menghubungkan button ke page yang sesuai, button kasih onClick

 how?
 1.use useNavigate from react router dom v-6
 import { useNavigate } from 'react-router-dom'
 2.make a var like that   const navigate = useNavigate(); 
 and you can use a var name inside of onClick as a func return and add /name-path

 11.install axios
 
 12. manggil data dari backend

  useEffect(() => {
    Axios.get('http://localhost:3000/v1/blog/posts')
      .then((result) => {
        console.log(result.data);
      })
      .catch((err) => {
        console.log(err);
      });
  }, []);

  13.Mengganti data dummy dengan useState
  -buat useState untuk simpan datanya 
  -lalu di map

  14.mengganti Component BlogItem dengan props

  15.setup management state global dengan redux
  -add redux react-redux toolkit
  -set up redux:
  a.buat folder redux di config
  --file store.js(membuat state secara global)
  b.selanjutnya membuat provider di file App.js(component untuk membungkus semua app kita)
  c.cara menggunakan state global:
  -useSelector

  error: configStore is not func
  penyebab: seharusnya pake import from bukan pake require

16.membuat action/reducer untuk mengubah store (store.js)

17.merubah state Global dengan useDispatch lalu di isi type nya apa
example:
--> action tanpa payload
a. const dispatch = useDispatch();
b.tulis kode ini di useEffect {
  
  setTimeout(() =>{
dispatch({type: 'UPDATE_NAME'})
  }, 3000)


}

c.component return
 <p>{stateGlobal.name}</p> akan berubah isinya

 setelah 3 detik isi state akan berubah


 --> action dengan payload:

    dispatch({type: 'UPDATE_DATA_BLOG', payload: responseAPI.data})

